{"version":3,"file":"static/preview.e55c020e2fc7d7c40bfd.bundle.js","sources":["webpack:///./src/base-chart.component.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tOnInit,\n\tAfterViewInit\n} from \"@angular/core\";\n\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"n-base-chart\",\n\ttemplate: `\n\t\t<div #nChart class='n-chart-container'>\n\t\t</div>\n\t`\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = this._data !== null && this._data !== undefined;\n\n\t\tthis._data = newData;\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart.setData(newData);\n\t\t}\n\t}\n\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() options: any;\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width: any;\n\t\n\t/**\n\t * Chart height\n\t */\n\t@Input() height: any;\n\t\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild(\"nChart\") chartRef;\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart;\n\n\tprivate _data: any;\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width;\n\t\t} else if (!this.options.width) {\n\t\t\tconsole.error(\"Missing `width` Input!\");\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height;\n\t\t} else if (!this.options.height) {\n\t\t\tconsole.error(\"Missing `height` Input!\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tconsole.log(\"You need to implement your own `ngAfterViewInit()` function\");\n\t}\n}\n"],"mappings":"AAAA","sourceRoot":""}